@prefix checks: <http://drobilla.net/ns/serd/checks#> .
@prefix mf: <http://www.w3.org/2001/sw/DataAccess/tests/test-manifest#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix rdft: <http://www.w3.org/ns/rdftest#> .
@prefix serd: <http://drobilla.net/ns/serd#> .

rdft:Test
	rdfs:subClassOf mf:ManifestEntry .

serd:TestTurtleNegativeValidate
	a rdfs:Class ;
	rdfs:label "Turtle Negative Validation" ;
	rdfs:subClassOf rdft:Test ,
	[
		rdf:type owl:Restriction ;
		owl:onProperty serd:triggersCheck ;
		owl:minCardinality 1
	] .

serd:TestTurtlePositiveValidate
	a rdfs:Class ;
	rdfs:label "Turtle Positive Validation" ;
	rdfs:subClassOf rdft:Test .

serd:triggersCheck
	a rdf:Property ;
	rdfs:label "triggers check" ;
	rdfs:range serd:ValidatorCheck .

<>
	a mf:Manifest ;
	rdfs:comment "Serd validation test cases" ;
	mf:entries (
		<#bad-all-values-from>
		<#bad-anyuri>
		<#bad-cardinality-high>
		<#bad-cardinality-low>
		<#bad-cardinality>
		<#bad-datatype-property>
		<#bad-deprecated-class>
		<#bad-deprecated-property>
		<#bad-domain>
		<#bad-functional-property>
		<#bad-inverse-functional-property>
		<#bad-literal-pattern>
		<#bad-literal-value-high-exclusive>
		<#bad-literal-value-high-inclusive>
		<#bad-literal-value-low-exclusive>
		<#bad-literal-value-low-inclusive>
		<#bad-literal-value>
		<#bad-object-property>
		<#bad-pattern>
		<#bad-plain-literal>
		<#bad-predicate-type-undefined>
		<#bad-predicate-type>
		<#bad-range-instance-not-literal>
		<#bad-range-instance>
		<#bad-range-literal-not-instance>
		<#bad-range-literal>
		<#bad-some-values-from>
		<#bad-string-literal-value-high>
		<#bad-string-literal-value-low>
		<#bad-subclass-cycle>
		<#bad-subproperty-cycle>
		<#bad-superclass-restriction>
		<#bad-union-of>
		<#bad-unknown-datatype>
		<#good-anyuri>
		<#good-cardinality>
		<#good-literal-value-high-inclusive>
		<#good-literal-value-low-inclusive>
		<#good-owl-thing>
		<#good-pattern>
		<#good-rdfs-resource>
		<#good-some-values-from>
		<#good-string-literal-value-low>
		<#good-union-of>
	) .

<#bad-all-values-from>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:allValuesFrom ,
		checks:instanceType ;
	mf:name "bad-all-values-from" ;
	mf:action <bad-all-values-from.ttl> .

<#bad-anyuri>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:anyUri ,
		checks:propertyRange ;
	mf:name "bad-anyuri" ;
	mf:action <bad-anyuri.ttl> .

<#bad-cardinality-low>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:cardinalityMin ,
		checks:instanceType ;
	mf:name "bad-cardinality-low" ;
	mf:action <bad-cardinality-low.ttl> .

<#bad-cardinality-high>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:cardinalityMax ,
		checks:instanceType ;
	mf:name "bad-cardinality-high" ;
	mf:action <bad-cardinality-high.ttl> .

<#bad-cardinality>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:cardinalityEqual ,
		checks:instanceType ;
	mf:name "bad-cardinality" ;
	mf:action <bad-cardinality.ttl> .

<#bad-datatype-property>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:datatypeProperty ;
	mf:name "bad-datatype-property" ;
	mf:action <bad-datatype-property.ttl> .

<#bad-deprecated-class>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:deprecatedClass ;
	mf:name "bad-deprecated-class" ;
	mf:action <bad-deprecated-class.ttl> .

<#bad-deprecated-property>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:deprecatedProperty ;
	mf:name "bad-deprecated-property" ;
	mf:action <bad-deprecated-property.ttl> .

<#bad-domain>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:cardinalityEqual ,
		checks:propertyDomain ;
	mf:name "bad-domain" ;
	mf:action <bad-domain.ttl> .

<#bad-functional-property>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:functionalProperty ;
	mf:name "bad-functional-property" ;
	mf:action <bad-functional-property.ttl> .

<#bad-inverse-functional-property>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:inverseFunctionalProperty ;
	mf:name "bad-inverse-functional-property" ;
	mf:action <bad-inverse-functional-property.ttl> .

<#bad-literal-pattern>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalPattern ;
	mf:name "bad-literal-pattern" ;
	mf:action <bad-literal-pattern.ttl> .

<#bad-literal-value-low-inclusive>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalMinInclusive ;
	mf:name "bad-literal-value-low-inclusive" ;
	mf:action <bad-literal-value-low-inclusive.ttl> .

<#bad-literal-value-high-inclusive>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalMaxInclusive ;
	mf:name "bad-literal-value-high-inclusive" ;
	mf:action <bad-literal-value-high-inclusive.ttl> .

<#bad-literal-value-low-exclusive>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalMinExclusive ;
	mf:name "bad-literal-value-low-exclusive" ;
	mf:action <bad-literal-value-low-exclusive.ttl> .

<#bad-literal-value-high-exclusive>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalMaxExclusive ;
	mf:name "bad-literal-value-high-exclusive" ;
	mf:action <bad-literal-value-high-exclusive.ttl> .

<#bad-literal-value>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalValue ;
	mf:name "bad-literal-value" ;
	mf:action <bad-literal-value.ttl> .

<#bad-string-literal-value-low>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalMinExclusive ;
	mf:name "bad-string-literal-value-low" ;
	mf:action <bad-string-literal-value-low.ttl> .

<#bad-string-literal-value-high>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalMaxExclusive ;
	mf:name "bad-string-literal-value-high" ;
	mf:action <bad-string-literal-value-high.ttl> .

<#bad-subclass-cycle>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:classCycle ;
	mf:name "bad-subclass-cycle" ;
	mf:action <bad-subclass-cycle.ttl> .

<#bad-subproperty-cycle>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:propertyCycle ;
	mf:name "bad-subproperty-cycle" ;
	mf:action <bad-subproperty-cycle.ttl> .

<#bad-superclass-restriction>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:instanceType ,
		checks:cardinalityMin ;
	mf:name "bad-superclass-restriction" ;
	mf:action <bad-superclass-restriction.ttl> .

<#bad-object-property>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:objectProperty ;
	mf:name "bad-object-property" ;
	mf:action <bad-object-property.ttl> .

<#bad-pattern>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalPattern ;
	mf:name "bad-pattern" ;
	mf:action <bad-pattern.ttl> .

<#bad-plain-literal>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:plainLiteralDatatype ,
		checks:propertyRange ;
	mf:name "bad-plain-literal" ;
	mf:action <bad-plain-literal.ttl> .

<#bad-range-instance-not-literal>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:instanceLiteral ,
		checks:propertyRange ;
	mf:name "bad-range-instance-not-literal" ;
	mf:action <bad-range-instance-not-literal.ttl> .

<#bad-range-instance>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:instanceType ,
		checks:propertyRange ;
	mf:name "bad-range-instance" ;
	mf:action <bad-range-instance.ttl> .

<#bad-range-literal-not-instance>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalInstance ,
		checks:propertyRange ;
	mf:name "bad-range-literal-not-instance" ;
	mf:action <bad-range-literal-not-instance.ttl> .

<#bad-range-literal>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:literalMaxInclusive ,
		checks:propertyRange ;
	mf:name "bad-range-literal" ;
	mf:action <bad-range-literal.ttl> .

<#bad-some-values-from>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:someValuesFrom ,
		checks:instanceType ;
	mf:name "bad-some-values-from" ;
	mf:action <bad-some-values-from.ttl> .

<#bad-union-of>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:propertyRange ;
	mf:name "bad-union-of" ;
	mf:action <bad-union-of.ttl> .

<#bad-unknown-datatype>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:datatypeType ;
	mf:name "bad-unknown-datatype" ;
	mf:action <bad-unknown-datatype.ttl> .

<#bad-predicate-type-undefined>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:predicateType ;
	mf:name "bad-predicate-type-undefined" ;
	mf:action <bad-predicate-type-undefined.ttl> .

<#bad-predicate-type>
	a serd:TestTurtleNegativeValidate ;
	serd:triggersCheck checks:predicateType ;
	mf:name "bad-predicate-type" ;
	mf:action <bad-predicate-type.ttl> .

<#good-anyuri>
	a serd:TestTurtlePositiveValidate ;
	mf:name "good-anyuri" ;
	mf:action <good-anyuri.ttl> .

<#good-cardinality>
	a serd:TestTurtlePositiveValidate ;
	mf:name "good-cardinality" ;
	mf:action <good-cardinality.ttl> .

<#good-literal-value-low-inclusive>
	a serd:TestTurtlePositiveValidate ;
	mf:name "good-literal-value-low-inclusive" ;
	mf:action <good-literal-value-low-inclusive.ttl> .

<#good-literal-value-high-inclusive>
	a serd:TestTurtlePositiveValidate ;
	mf:name "good-literal-value-high-inclusive" ;
	mf:action <good-literal-value-high-inclusive.ttl> .

<#good-some-values-from>
	a serd:TestTurtlePositiveValidate ;
	mf:name "good-some-values-from" ;
	mf:action <good-some-values-from.ttl> .

<#good-owl-thing>
	a serd:TestTurtlePositiveValidate ;
	mf:name "good-owl-thing" ;
	mf:action <good-owl-thing.ttl> .

<#good-pattern>
	a serd:TestTurtlePositiveValidate ;
	mf:name "good-pattern" ;
	mf:action <good-pattern.ttl> .

<#good-rdfs-resource>
	a serd:TestTurtlePositiveValidate ;
	mf:name "good-rdfs-resource" ;
	mf:action <good-rdfs-resource.ttl> .

<#good-string-literal-value-low>
	a serd:TestTurtlePositiveValidate ;
	mf:name "good-string-literal-value-low" ;
	mf:action <good-string-literal-value-low.ttl> .

<#good-union-of>
	a serd:TestTurtlePositiveValidate ;
	mf:name "good-union-of" ;
	mf:action <good-union-of.ttl> .

